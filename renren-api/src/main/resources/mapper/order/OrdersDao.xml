<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.orders.dao.OrdersDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.orders.entity.OrdersEntity" id="ordersMap">
        <result property="orderId" column="ORDER_ID"/>
        <result property="orderDate" column="ORDER_DATE"/>
        <result property="sendUserId" column="SEND_USER_ID"/>
        <result property="recvUserId" column="RECV_USER_ID"/>
        <result property="orderType" column="ORDER_TYPE"/>
        <result property="orderState" column="ORDER_STATE"/>
        <result property="payType" column="PAY_TYPE"/>
        <result property="sendAmount" column="SEND_AMOUNT"/>
        <result property="amount" column="AMOUNT"/>
        <result property="recvAmount" column="RECV_AMOUNT"/>
        <result property="orderSn" column="ORDER_SN"/>
        <result property="timeoutRecv" column="TIMEOUT_RECV"/>
        <result property="timeoutPay" column="TIMEOUT_PAY"/>
        <result property="timeoutDown" column="TIMEOUT_DOWN"/>
        <result property="isApi" column="IS_API"/>
        <result property="platDate" column="PLAT_DATE"/>
        <result property="serviceRemark" column="SERVICE_REMARK"/>
        <result property="sendAccountNo" column="SEND_ACCOUNT_NO"/>
        <result property="sendAccountName" column="SEND_ACCOUNT_NAME"/>
        <result property="recvAccountNo" column="RECV_ACCOUNT_NO"/>
        <result property="recvAccountName" column="RECV_ACCOUNT_NAME"/>
        <result property="bankName" column="BANK_NAME"/>
        <result property="qrimgId" column="QRIMG_ID"/>
        <result property="notifyUrl" column="NOTIFY_URL"/>
        <result property="dataStatus" column="DATA_STATUS"/>
        <result property="modifyTime" column="MODIFY_TIME"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="remark" column="REMARK"/>
        <result property="sendBankName" column="SEND_BANK_NAME"/>
        <result property="recvBankName" column="RECV_BANK_NAME"/>
        <result property="sendRate" column="SEND_RATE"/>
        <result property="recvRate" column="RECV_RATE"/>
        <result property="sendRateAmount" column="SEND_RATE_AMOUNT"/>
        <result property="recvRateAmount" column="RECV_RATE_AMOUNT"/>
    </resultMap>

    <select id="getOrders" parameterType="map" resultMap="ordersMap">
        select *
        from orders
        <where>
            <if test="orderType != null">
                and ORDER_TYPE = #{orderType}
            </if>
            <if test="sendUserId != null">
                and SEND_USER_ID = #{sendUserId}
            </if>
            <if test="includeState != null">
                and ORDER_STATE in
                <foreach collection="includeState" item="orderState" open="(" separator="," close=")">
                     #{orderState}
                </foreach>
            </if>
        </where>
    </select>


    <select id="getSendOrRecvOrderList"  parameterType="map" resultMap="ordersMap">
        select *
        from orders
        where (SEND_USER_ID = #{params.userId} or RECV_USER_ID = #{params.userId})
        <if test="params.orderType != null">
            and ORDER_TYPE = #{params.orderType}
        </if>
        <if test="params.orderState != null">
            and ORDER_STATE = #{params.orderState}
        </if>
        order by CREATE_TIME desc
    </select>

    <update id="reciveOrderSuccess" parameterType="io.renren.modules.orders.entity.OrdersEntity">
        update orders
        <set>
            <if test="orderState != null">
                ORDER_STATE = #{orderState},
            </if>
            <if test="recvUserId != null">
                RECV_USER_ID = #{recvUserId},
            </if>
            <if test="qrimgId != null">
                QRIMG_ID = #{qrimgId},
            </if>
            <if test="recvAccountName != null">
                RECV_ACCOUNT_NO = #{recvAccountName},
            </if>
            <if test="recvAccountName != null">
                RECV_ACCOUNT_NAME = #{recvAccountName},
            </if>
            <if test="recvBankName != null">
                RECV_BANK_NAME = #{recvBankName},
            </if>
        </set>
        where ORDER_ID = #{orderId} and ORDER_STATE = 1
    </update>

    <select id="listValidOrders" resultType="java.util.Map">
        SELECT
            o.ORDER_ID orderId, o.ORDER_SN orderSn,o.SEND_USER_ID sendUserId,us.MOBILE sendUserMobile,ur.MOBILE recvUserMobile,o.RECV_USER_ID recvUserId,
            o.ORDER_TYPE orderType,o.ORDER_STATE orderState,
            o.IS_API isApi,o.PLAT_DATE platDate,
            o.CREATE_TIME createTime,o.TIMEOUT_DOWN timeoutDown,o.TIMEOUT_RECV timeoutRecv,o.TIMEOUT_PAY timeoutPay,SERVICE_REMARK serviceRemark
        FROM
            orders o
        LEFT JOIN `user` us on us.USER_ID = o.SEND_USER_ID
        LEFT JOIN `user` ur on ur.USER_ID = o.RECV_USER_ID
        where
            o.DATA_STATUS='valid'
        AND (
               o.TIMEOUT_RECV is null or (o.TIMEOUT_RECV is not null and TIMESTAMPDIFF(SECOND,o.CREATE_TIME,now())>=o.TIMEOUT_RECV)
            or o.TIMEOUT_PAY is null or (o.TIMEOUT_PAY is not null and TIMESTAMPDIFF(SECOND,o.CREATE_TIME,now())>=o.TIMEOUT_PAY)
            or o.TIMEOUT_DOWN is null or (o.TIMEOUT_DOWN is not null and TIMESTAMPDIFF(SECOND,o.CREATE_TIME,now())>=o.TIMEOUT_DOWN)
        )
        <if test="null!=typeList">
            AND o.ORDER_TYPE IN
            <foreach collection="typeList" item="item" index="index" open="(" close=")" separator=",">#{item}</foreach>
        </if>
        <if test="null!=stateList">
            AND o.ORDER_STATE IN
            <foreach collection="stateList" item="item" index="index" open="(" close=")" separator=","> #{item} </foreach>
        </if>
        <if test="null!=excludeStatusList">
            AND o.ORDER_STATE NOT IN
            <foreach collection="excludeStatusList" item="item" index="index" open="(" close=")" separator=","> #{item} </foreach>
        </if>

        ORDER BY o.create_time asc
        limit #{limit}
    </select>

    <update id="batchUpdateState">
        update
          orders
        set
          ORDER_STATE = #{state}, MODIFY_TIME=now()
        where
          DATA_STATUS='valid' and ORDER_ID in
            <foreach collection="idList" item="item" index="index" open="(" close=")" separator=",">#{item}</foreach>
        <if test="null!=validStateList">
            and ORDER_STATE in
            <foreach collection="validStateList" item="item" index="index" open="(" close=")" separator=",">#{item}</foreach>
        </if>
    </update>
</mapper>